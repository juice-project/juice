#summary Some ideas for further developement of Juice

Rename onJsLoaded to ready (like known from jQuery).

{{{
juice.ready(runExtensions);
}}}

instead of 

{{{
juice.onJsLoaded(runExtensions);
}}}

*RJW* - A good suggestion - will need to be applied to `juice.onAllLoaded()` to account for Googlre library integration

----

Let juice method return the juice object to allow

{{{
juice.ready(runExtensions).setDebug(true);
}}}

*RJW* - Although more elegant coding I believe that this type of coding wil be open to missunderstandings by the copy/paste coders that Juice is aimed at.

----

Usage of [CreateMetadef MetaDefs] can be simplified:

{{{
juice.meta("title", "#itemDetailsContainer > h1 ");
}}}

or

{{{
juice.meta("title", JuiceMeta("#itemDetailsContainer > h1 "));
}}}

instead of

{{{
juice.addMeta(new JuiceMeta("title","#itemDetailsContainer > h1 "));
}}}

*RJW* - There is merit in this suggestion - the `new` serves to complicate things - first option looks best.

*JV* - ok

----

Change definition and installation of [InsertsAndPanels inserts] and [ExtensionList extension] from

{{{
var div = '<div>...</div>';
var insert = new JuiceInsert(div,"body","append");
new MyExtensionClass(juice,...,insert);
}}}

to

{{{
var div = '<div>...</div>';
var extension = new MyExtensionClass(....);
juice.insert(div, "body","append", extension);
}}}

or 

{{{
var div = '<div>...</div>';
juice.insert(div, "body","append", MyExtensionClass(....));
}}}

Extensions have access to the juice object anyway because it's a global variable and the insert object should be passed to the initFunc (or another core method) of the extension.

*RJW* There is some thought to be made around this.  In theory all extensions do not necessarily need an Insert.  Also Inserts are used elsewhere, in Panels for instance.